% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Lego_functions.R
\name{Lego_load_matrix}
\alias{Lego_load_matrix}
\title{Load a NxM dimensional matrix into the Lego store.}
\usage{
Lego_load_matrix(Lego = NULL, chr1 = NULL, chr2 = NULL,
    matrix.file = NULL, delim = " ", exec = NULL,
    remove.prior = FALSE, num.rows = 2000, is.sparse = FALSE,
    sparsity.bins = 100)
}
\arguments{
\item{Lego}{\strong{Required}.
A string specifying the path to the Lego store created with CreateLego.}

\item{chr1}{\strong{Required}.
A character vector of length 1 specifying the chromosome corresponding to
the rows of the matrix}

\item{chr2}{\strong{Required}.
A character vector of length 1 specifying the chromosome corresponding to
the columns of the matrix}

\item{matrix.file}{\strong{Required}.
A character vector of length 1 specifying the name of the file to load as a
matrix into the Lego store.}

\item{delim}{\strong{Optional}. Default " "
The delimiter of the matrix file.}

\item{exec}{\strong{Required}.
A string specifying the program to use for reading the file. Use cat for txt
files, for bz2 files use bzcat and for gz files zcat.}

\item{remove.prior}{\strong{Optional}. Default FALSE
If a matrix was loaded before, it will not be replaced. Use remove.prior to
override and replace the existing matrix.}

\item{num.rows}{\strong{Optional}. Default 2000
Number of rows to read, in each chunk.}

\item{is.sparse}{\strong{Optional}. Default FALSE
If true, designates the matrix as being a sparse matrix, and computes the
sparsity.index. The sparsity index measures the proportion of non-zero rows
or columns at a certain distance from the diagonal (100) in cis interaction
matrices.}

\item{sparsity.bins}{\strong{Optional}. Default 100
With regards to computing the sparsity.index, this parameter decides the
number of bins to scan from the diagonal.}
}
\value{
Returns TRUE if all went well.
}
\description{
Load a NxM dimensional matrix into the Lego store.
}
\examples{

Test.mat <- matrix(NA,nrow = 800, ncol = 800)
Row <- row(Test.mat)
Col <- col(Test.mat)
Dist <- Col - Row
Matrix.file <- "Test_matrix.txt"
write.table(x = Dist, file = Matrix.file, sep = " ", quote = FALSE, 
row.names = FALSE, col.names = FALSE)
Lego.file <- Lego_path_to_file(Lego = "test.hdf")
Lego_load_matrix(Lego = Lego.file, chr1 = "chr19", chr2 = "chr19",
matrix.file = Matrix.file, delim = " ", exec = "cat", 
remove.prior = TRUE)

}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Lego_functions.R
\name{CreateLego}
\alias{CreateLego}
\title{Create the entire HDF5 structure and load the bintable}
\usage{
CreateLego(ChromNames = NULL, BinTable = NULL, bin.delim = "\\t",
  col.index = c(1, 2, 3), impose.discontinuity = TRUE,
  ChunkSize = NULL, Output.Filename = NULL, exec = "cat",
  remove.existing = FALSE)
}
\arguments{
\item{ChromNames}{\strong{Required}.
A character vector containing the chromosomes to be considered for the
dataset. This string is used to verify the presence of all chromosomes in the
provided bitable.}

\item{BinTable}{\strong{Required}.
A string containing the path to the file to load as the binning table for the
Hi-C experiment. The number of entries per chromosome defines the dimension
of the associated Hi-C data matrices. For example, if chr1 contains 250
entries in the binning table, the \emph{cis} Hi-C data matrix for chr1 will be
expected to contain 250 rows and 250 cols. Similary, if the same binning
table contained 150 entries for chr2, the \emph{trans} Hi-C matrices for chr1,chr2
will be a matrix with dimension 250 rows and 150 cols.

There are no constraints on the bintable format. As long as the table is in a
delimited format, the corresponding table columns can be outlined with the
associated parameters. The columns of importance are chr, start and end.

It is recommended to always use binning tables where the end and start of
consecutive ranges are not the same. If they are the same, this may lead to
\strong{unexpected behaviour} when using the GenomicRanges "any" overlap function.}

\item{bin.delim}{\strong{Optional}. Defaults to tabs.
A character vector of length 1 specifying the delimiter used in the file
containing the binning table.}

\item{col.index}{\strong{Optional}. Default "c(1,2,3)".
A character vector of length 3 containing the indexes of the required columns
in the binning table. the first index, corresponds to the chr column, the
second to the start column and the third to the end column.}

\item{impose.discontinuity}{\strong{Optional}. Default TRUE.
If TRUE, this parameter ensures a check to make sure that required the end
and start coordinates of consecutive entries are not the same per chromosome.}

\item{ChunkSize}{\strong{Optional}.
A numeric vector of length 1. If provided, the HDF dataset will use this
value as the chunk size, for all matrices. By default, the ChunkSize is
set to matrix dimensions/100.}

\item{Output.Filename}{\strong{Required}.
A string specifying the location and name of the HDF file to create. If path
is not provided, it will be created in the current working directory.}

\item{exec}{\strong{Optional}. Default cat.
A string specifying the program or expression to use for reading the file.
For bz2 files, use bzcat and for gunzipped files use zcat.}

\item{remove.existing}{\strong{Optional}. Default FALSE.
If TRUE, will remove the HDF file with the same name and create a new one.
By default, it will not replace existing files.}
}
\description{
\code{CreateLego} creates the complete HDF5 on-disk data structure
}
\details{
This function creates the complete HDF data structure, loads the binning
table associated to the Hi-C experiment and creates (for now) a 2D matrix
layout for all chromosome pairs. \strong{Please note}, the binning table must
be a discontinuous one (first range end != secode range start), as ranges
overlaps using the "any" form will routinely identify adjacent ranges with
the same end and start to be in the overlap. Therefore, this criteria is
enforced as default behaviour.

The structure of the HDF file is as follows:
The structure contains three major groups which are then hierarchically
nested with other groups to finally lead to the corresponding datasets.
\emph{Base.matrices} \strong{group}
\emph{chromosome} \strong{group}
\emph{chromosome} \strong{group}, \strong{Attributes:} Filename, Min, Max, Done
matrix \strong{dataset}
bin.coverage \strong{dataset}
row.sums \strong{dataset}
sparsity \strong{dataset}
\emph{Base.ranges} \strong{group}
\emph{Bintable} \strong{group}
ranges \strong{dataset}
offsets \strong{dataset}
lengths \strong{dataset}
chr.names \strong{dataset}
\emph{YourRangesTable} \strong{group}
ranges \strong{dataset}
offsets \strong{dataset}
lengths \strong{dataset}
chr.names \strong{dataset}
\emph{Base.metadata} \strong{group}
chromosomes \strong{dataset}
YourMetadataTable \strong{dataset}
}

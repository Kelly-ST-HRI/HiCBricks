% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Brick_functions.R
\name{Brick_get_ranges}
\alias{Brick_get_ranges}
\title{Fetch the ranges associated to a rangekey or chromosome.}
\usage{
Brick_get_ranges(Brick, chr = NULL, rangekey)
}
\arguments{
\item{Brick}{\strong{Required}.
A string specifying the path to the Brick store created with CreateBrick.}

\item{chr}{\strong{Optional}.
A chr string specifying the chromosome to select from the ranges.}

\item{rangekey}{\strong{Required}.
A string specifying the name of the ranges.}
}
\value{
Returns a GRanges object with the associated metadata columns that
may have been present in the Ranges object.
}
\description{
\code{Brick_get_ranges} will get a ranges object if present in the Brick store
and return a GRanges object.
}
\details{
If a rangekey is present, the ranges will be retrieve and a GRanges
constructed. Metadata columns will also be added. If these are rangekeys
other than "Bintable", and had been added using Brick_add_ranges the width
and Strand columns may appear as metadata columns. These will most likely
be artifacts from converting the original ranges object to a data.frame.
}
\examples{
Brick.file <- system.file("extdata", "test.hdf", package = "HiCBricks")
Brick_get_ranges(Brick = Brick.file, chr = "chr19", rangekey = "Bintable")

}

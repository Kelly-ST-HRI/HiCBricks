% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Lego_functions.R
\name{CreateLego_from_mcool}
\alias{CreateLego_from_mcool}
\title{Create the entire HDF5 structure and load the bintable from a mcool file}
\usage{
CreateLego_from_mcool(Lego = NULL, mcool = NULL, binsize = NULL,
  chrs = NULL, remove.existing = FALSE)
}
\arguments{
\item{Lego}{\strong{Required}.
A string specifying the path to the Lego store created with CreateLego.}

\item{mcool}{\strong{Required}.
Path to an mcool file.}

\item{binsize}{\strong{Optional}.
The binsize to select from an mcool file.}

\item{chrs}{\strong{Optional}.
If provided will only create a Lego for these
chromosomes (both cis & trans).}

\item{remove.existing}{\strong{Optional}. Default FALSE.
If TRUE, will remove the HDF file with the same name and create a new one.
By default, it will not replace existing files.}
}
\description{
\code{CreateLego_from_mcool} is a wrapper on CreateLego which creates the Lego
data structure from an mcool file.
}
\details{
mcool are a standard 4D nucleome data structure for Hi-C data. Read more
about the 4D nucleome project \href{https://data.4dnucleome.org/}{here}.
}
\examples{

\dontrun{
require(curl)
curl_download(url = paste("https://data.4dnucleome.org/"
"files-processed/4DNFI7JNCNFB/"
"@download/4DNFI7JNCNFB.mcool",sep = ""),
destfile = "./H1-hESC-HiC-4DNFI7JNCNFB.mcool")

Output.lego <- paste("./H1-hESC-HiC-4DNFI7JNCNFB-10000",
"ICE-normalised-chr1.lego",sep = "-")
mcool <- "./H1-hESC-HiC-4DNFI7JNCNFB.mcool"

CreateLego_from_mcool(Lego = Output.lego, 
mcool = mcool, 
binsize = 10000, 
chrs = "chr1")

}

}
\seealso{
\code{\link{Lego_load_data_from_mcool}} to load data from
the mcool to a Lego store.
}

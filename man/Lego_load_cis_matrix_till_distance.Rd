% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Lego_functions.R
\name{Lego_load_cis_matrix_till_distance}
\alias{Lego_load_cis_matrix_till_distance}
\title{Load a NxN dimensional sub-distance  \emph{cis} matrix into the Lego store.}
\usage{
Lego_load_cis_matrix_till_distance(Lego = NULL, chr = NULL,
  matrix.file = NULL, delim = " ", distance = NULL,
  remove.prior = FALSE, num.rows = 2000, is.sparse = FALSE,
  sparsity.bins = 100)
}
\arguments{
\item{Lego}{\strong{Required}.
A string specifying the path to the Lego store created with CreateLego.}

\item{chr}{\strong{Required}.
A character vector of length 1 specifying the chromosome corresponding to the
rows and cols of the matrix}

\item{matrix.file}{\strong{Required}.
A character vector of length 1 specifying the name of the file to load as a
matrix into the Lego store.}

\item{delim}{\strong{Optional}. Default " "
The delimiter of the matrix file.}

\item{distance}{\strong{Required}. Default NULL. Not implemented yet.
For very high-resolution matrices, read times can become extremely slow and
it does not make sense to load the entire matrix into the data structure, as
after a certain distance, the matrix will become extremely sparse. This
ensures that only interactions upto a certain distance from the main diagonal
will be loaded into the data structure.}

\item{remove.prior}{\strong{Optional}. Default FALSE
If a matrix was loaded before, it will not be replaced. Use remove.prior to
override and replace the existing matrix.}

\item{num.rows}{\strong{Optional}. Default 2000
Number of rows to insert per write operation in the HDF file.}

\item{is.sparse}{\strong{Optional}. Default FALSE
If true, designates the matrix as being a sparse matrix, and computes the
sparsity.index. The sparsity index measures the proportion of non-zero rows
or columns at a certain distance from the diagonal (100) in cis interaction
matrices.}

\item{sparsity.bins}{\strong{Optional}. Default 100
With regards to computing the sparsity.index, this parameter decides the
number of bins to scan from the diagonal.}
}
\description{
Load a NxN dimensional sub-distance  \emph{cis} matrix into the Lego store.
}
\examples{

Test.mat <- matrix(NA,nrow = 800, ncol = 800)
Row <- row(Test.mat)
Col <- col(Test.mat)
Dist <- Col - Row
Matrix.file <- "Test_matrix.txt"
write.table(x = Dist, file = Matrix.file, sep = " ", quote = FALSE, 
row.names = FALSE, col.names = FALSE)
Lego.file <- "test.hdf"
Lego_load_cis_matrix_till_distance(Lego = Lego.file, chr = "chr19", 
matrix.file = Matrix.file, delim = " ", distance = 200, remove.prior = TRUE)

}

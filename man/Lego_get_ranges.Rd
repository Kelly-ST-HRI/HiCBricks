% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Lego_functions.R
\name{Lego_get_ranges}
\alias{Lego_get_ranges}
\title{Fetch the ranges associated to a rangekey or chromosome.}
\usage{
Lego_get_ranges(Lego = NULL, chr = NULL, rangekey = NULL)
}
\arguments{
\item{Lego}{\strong{Required}.
A string specifying the path to the Lego store created with CreateLego.}

\item{chr}{\strong{Optional}.
A chr string specifying the chromosome to select from the ranges.}

\item{rangekey}{\strong{Required}.
A string specifying the name of the ranges.}
}
\value{
Returns a GRanges object with the associated metadata columns that
may have been present in the Ranges object.
}
\description{
\code{Lego_get_ranges} will get a ranges object if present in the Lego store and
return a GRanges object.
}
\details{
If a rangekey is present, the ranges will be retrieve and a GRanges
constructed. Metadata columns will also be added. If these are rangekeys
other than "Bintable", and had been added using Lego_add_ranges the width and
Strand columns may appear as metadata columns. These will most likely be
artifacts from converting the original ranges object to a data.frame.
}
\examples{
Lego.file <- system.file("extdata", "test.hdf", package = "HiCLegos")
Lego_get_ranges(Lego = Lego.file, chr = "chr19", rangekey = "Bintable")

}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Lego_functions.R
\name{Lego_get_matrix}
\alias{Lego_get_matrix}
\title{Return a matrix subset.}
\usage{
Lego_get_matrix(Lego = NULL, chr1 = NULL, chr2 = NULL,
    x.vector = NULL, y.vector = NULL, force = FALSE, FUN = NULL)
}
\arguments{
\item{Lego}{\strong{Required}.
A string specifying the path to the Lego store created with CreateLego.}

\item{chr1}{\strong{Required}.
A character vector of length 1 specifying the chromosome corresponding to
the rows of the matrix}

\item{chr2}{\strong{Required}.
A character vector of length 1 specifying the chromosome corresponding to
the columns of the matrix}

\item{x.vector}{\strong{Required}.
A one-dimensional numeric vector specifying the rows to subset.}

\item{y.vector}{\strong{Required}.
A one-dimensional numeric vector specifying the columns to subset.}

\item{force}{\strong{Optional}. Default FALSE
If true, will force the retrieval operation when matrix contains loaded
data until a certain distance.}

\item{FUN}{\strong{Optional}.
If provided a data transformation with FUN will be applied before the matrix
is returned.}
}
\value{
Returns a matrix of dimension x.vector length by y.vector length.
This may differ based on the operations with FUN.
}
\description{
\code{Lego_get_matrix} will fetch a matrix subset between row values
ranging from min(x.vector) to max(x.vector) and column values ranging from
min(x.vector) to max(x.vector)
}
\examples{
Lego.file <- system.file("extdata", "test.hdf", package = "HiCLegos")
Lego_get_matrix(Lego = Lego.file, chr1 = "chr19", chr2 = "chr19", 
x.vector = c(1:10), y.vector = c(1:10))

}
\seealso{
\code{\link{Lego_get_matrix_within_coords}} to get matrix by using
matrix genomic coordinates, \code{\link{Lego_get_values_by_distance}} to get
values separated at a certain distance, \code{\link{Lego_fetch_row_vector}}
to getvalues in a certain row/col and subset them,
\code{\link{Lego_get_vector_values}} to get values using matrix coordinates.
}
